# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: download-latest-policies
on:
  schedule:
    - cron: 0 0 * * FRI
jobs:
  download-latest-policies:
    name: download-latest-policies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      patch_created: ${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PROJEN_BUILD_ACCOUNT_ID }}:role/GitHubActions
          role-duration-seconds: 3600
          aws-region: ${{ secrets.AWS_PROJEN_BUILD_REGION }}
          role-skip-session-tagging: true
          role-session-name: GitHubActions
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install --check-files
      - name: download-policies
        run: |-
          ts-node ./src/bin/download-actions-json.ts
          ts-node ./src/bin/download-managed-policies-json.ts
          ts-node ./src/bin/create-actions-json.ts
          npx eslint --fix ./src/constructs/Actions.ts
          npx eslint --fix ./src/constructs/ManagedPolicies.ts
      - name: Find mutations
        id: create_patch
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "patch_created=true" >> $GITHUB_OUTPUT
      - name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: .repo.patch
          path: .repo.patch
    timeout-minutes: 60
  create-pull-request:
    name: create-pull-request
    needs: download-latest-policies
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ needs.download-latest-policies.outputs.patch_created }}
    steps:
      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c
        with:
          app_id: ${{ secrets.PROJEN_APP_ID }}
          private_key: ${{ secrets.PROJEN_APP_PRIVATE_KEY }}
          permissions: ${{ needs.download-latest-policies.outputs.patch_created }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Download patch
        uses: actions/download-artifact@v3
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          branch: github-actions/upgrade-main
          title: "chore(deps): upgrade dependencies"
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          author: github-actions <github-actions@github.com>
          committer: github-actions <github-actions@github.com>
          signoff: true
    timeout-minutes: 60
